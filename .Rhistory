38	H
31	H
26	H
24	H
34	H
29	H
31	H
30	H
37	H
19	H
29	H
39	H
45	H
26	H
29	H
30	H
41	H
38	H
25	H
34	H
22	H
24	H
32	H
44	H
38	H
21	H
32	H
22	H
31	H
19	H
24	H
31	H
25	H
19	H
21	H
12	H
35	H
26	H
26	H
30	H
24	H
30	H
26	H
29	H
22	H
26	H
39	H
34	H
26	H
11	H
38	H
22	H
25	H
34	H
18	H
35	H
38	H
27	H
37	H
29	H
40	H
32	H
27	H
39	H
34	H
34	H
35	H
24	H
26	H
24	H
25	H
27	H
30	H
17	H
23	H
29	H
37	H
45	H
26	H
45	H
34	H
23	H
26	H
38	H
38	H
35	H
19	H
31	H
35	H
27	H
34	H
29	H
35	H
34	H
31	H
35	H
29	H
32	H
31	H
40	H
46	H
32	H
39	H
22	H
37	H
29	H
32	H
31	H
41	H
35	H
34	H
24	H
18	H
32	H
31	H
37	H
19	H
35	H
41	H
37	H
33	H
33	H
27	H
37	H
22	H
37	H
26	H
29	H
35	H
29	H
25	H
25	H
38	H
32	H
34	H
32	H
30	H
27	H
37	H
26	H
34	H
29	H
11	H
24	H
33	H
37	H
40	H
31	H
21	H
40	H
39	H
34	H
30	H
31	H
22	H
37	H
37	H
38	H
21	H
48	H
29	H
26	H
46	H
42	H
29	H
39	H
40	H
31	H
25	H
37	H
31	H
25	H
22	H
23	H
37	H
37	H
37	H
31	H
38	H
23	H
34	H
29	H
15	H
32	H
27	H
44	H
35	H
26	H
38	H
37	H
34	H
26	H
31	H
20	H
39	H
29	H
40	H
35	H
38	H
37	H
32	H
22	H
22	H
35	H
32	H
28	H
35	H
35	H
22	H
19	H
27	H
39	H
25	H
41	H
40	H
17	H
30	H
40	H
32	H
28	H
37	H
32	H
19	H
37	H
24	H
23	H
26	H
29	H
25	H
29	H
24	H
29	H
37	H
35	H
29	H
25	H
25	H
29	H
26	H
17	H
34	H
30	H
27	H
36	H
29	H
41	H
40	H
41	H
45	H
28	H
24	H
30	H
26	H
43	H
32	H
25	H
26	H
14	H
19	H
34	H
16	H
38	H
45	H
37	H
29	H
37	H
34	H
27	H
40	H
29	H
27	H
41	H
37	H
27	H
14	H
27	H
26	H
19	H
24	H
32	H
37	H
31	H
32	H
24	H
40	H
22	H
26	H
41	H
34	H
24	H
33	H
25	H
39	H
30	H
47	H
24	H
40	H
34	H
22	H
40	H
38	H
37	H
27	H
29	H
35	H
14	H
22	H
33	H
29	H
45	H
29	H
30	H
22	H
27	H
45	H
26	H
25	H
32	H
21	H
21	H
26	H
31	H
ydlp_ep <- read.csv("C:/Users/Benjamin/Desktop/ydlp_ep.csv")
head(ydlp_ep)
corr(ydlp_ep$GSF.Algorithm.Score,ydlp_ep$Applicant.Category)
correlation(ydlp_ep$GSF.Algorithm.Score,ydlp_ep$Applicant.Category)
?correlation
cor(ydlp_ep$GSF.Algorithm.Score,ydlp_ep$Applicant.Category)
with(ydlp_ep, plot(GSF.Algorithm.Score,Applicant.Category))
with(ydlp_ep, plot(Applicant.Category,GSF.Algorithm.Score))
lm(ydlp_ep$GSF.Algorithm.Score ~ ydlp_ep$Applicant.Category)
help(data.frame)
install.packages("rvest")
library(rvest)
install.packages("installr")
library(installr)
updateR()
source("U:R/tomkit_home.R")
nsc <- sqlFetch(dbedm,"dbo.clearinghouse_temp")
head(nsc)
library(dplyr)
nsc <- select(nsc,usi=USI,college_code=CollegeCode-Branch,college_name=CollegeName,college_state=CollegeState,year_type='2_4year',sector_type=Public_Private,enrollment_status,grad_flag='Graduated?',grad_date=GraduationDate,degree=DegreeTitle,major=Major,enroll_begin=EnrollmentBegin_dt,enroll_end=EnrollEnd_dt)
nsc <- select(nsc,usi=USI,college_code='CollegeCode-Branch',college_name=CollegeName,college_state=CollegeState,year_type='2_4year',sector_type=Public_Private,enrollment_status,grad_flag='Graduated?',grad_date=GraduationDate,degree=DegreeTitle,major=Major,enroll_begin=EnrollmentBegin_dt,enroll_end=EnrollEnd_dt)
nsc <- select(nsc,usi=USI,college_code='CollegeCode-Branch',college_name=CollegeName,college_state=CollegeState,year_type='2_4year',sector_type=Public_Private,enrollment_status=EnrollmentStatus,grad_flag='Graduated?',grad_date=GraduationDate,degree=DegreeTitle,major=Major,enroll_begin=EnrollmentBegin_dt,enroll_end=EnrollEnd_dt)
nsc <- select(nsc,usi=USI,college_code='CollegeCode-Branch',college_name=CollegeName,college_state=CollegeState,year_type='2_4year',sector_type=Public_Private,enrollment_status=EnrollmentStatus,grad_flag='Graduated?',grad_date=GraduationDate,degree=DegreeTitle,major=Major,enroll_begin=EnrollmentBegin_dt,enroll_end=EnrollmentEnd_dt)
nsc <- select(nsc,usi=USI,college_name=CollegeName,college_state=CollegeState,sector_type=Public_Private,enrollment_status=EnrollmentStatus,grad_date=GraduationDate,degree=DegreeTitle,major=Major,enroll_begin=EnrollmentBegin_dt,enroll_end=EnrollmentEnd_dt)
head(nsc)
lenght(nsc$usi[which(nsc$college_state=='OH'),])
length(nsc$usi[which(nsc$college_state=='OH'),])
length(nsc$usi[which(nsc$college_state=='OH'))
length(nsc$usi[which(nsc$college_state=='OH')])
length(unique(nsc$usi[which(nsc$college_state=='OH')]))
min(nsc$enroll_begin,na.rm=TRUE)
min(nsc$enroll_begin)
library(jsonlite)
setwd("C:/Users/Benjamin/Desktop/DC Stuff/walkscore_api_json_converstion
")
setwd("C:/Users/Benjamin/Desktop/DC Stuff/walkscore_api_json_converstion")
dc_lib <- read.csv("dc_libraries.csv")
dc_lib$unique_id <- paste0(dc_lib$FSCSKEY,dc_lib$FSCS_SEQ)
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",a$snapped_lat,"&lon=",a$snapped_lon,"&wsapikey=<INSERT KEY HERE>")))
walkscore <- ws$walkscore
description <- ws$description
new_row <- cbind(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=<INSERT KEY HERE>")))
walkscore <- ws$walkscore
description <- ws$description
new_row <- cbind(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
# ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=<INSERT KEY HERE>")))
ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=141ed522f01556e31ee8fd37963e04a5")))
walkscore <- ws$walkscore
description <- ws$description
new_row <- cbind(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
head(test)
address
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
# ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=<INSERT KEY HERE>")))
ws <- fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=141ed522f01556e31ee8fd37963e04a5"))
walkscore <- ws$walkscore
description <- ws$description
new_row <- cbind(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
test
lib_id
lib_id$CITY[]
lib_id$CITY[1]
lib_id$CITY[1,]
lib_id$CITY[,1]
lib_id$CITY
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
# ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=<INSERT KEY HERE>")))
ws <- fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=141ed522f01556e31ee8fd37963e04a5"))
walkscore <- ws$walkscore
description <- ws$description
new_row <- c(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
tes
test
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
# ws <- as.data.frame(fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=<INSERT KEY HERE>")))
ws <- fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=141ed522f01556e31ee8fd37963e04a5"))
walkscore <- ws$walkscore
description <- ws$description
new_row <- cbind(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
head(test)
address
class(test$address)
dc_lib <- read.csv("dc_libraries.csv",stringsAsFactors = FALSE)
dc_lib$unique_id <- paste0(dc_lib$FSCSKEY,dc_lib$FSCS_SEQ)
test <- data.frame()
for (i in unique(dc_lib$unique_id)){
lib_id <- subset(dc_lib,unique_id==i)
lat <- lib_id$LATITUDE[1]
lon <- lib_id$LONGITUDE[1]
address <- lib_id$ADDRESS[1]
city <- lib_id$CITY[1]
zip <- lib_id$ZIP[1]
county <- lib_id$CNTY[1]
lib_name <- lib_id$LIBNAME[1]
# ws <- fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=<INSERT KEY HERE>"))
ws <- fromJSON(paste0("http://api.walkscore.com/score?format=json&lat=",lat,"&lon=",lon,"&wsapikey=141ed522f01556e31ee8fd37963e04a5"))
walkscore <- ws$walkscore
description <- ws$description
new_row <- cbind(lat,lon,address,city,zip,county,lib_name,walkscore,description)
test <- rbind(test,new_row)
}
head(test)
class(test)
test
install.packages("ggmap")
install.packages("ggmap")
us_lib <- read.csv("us_libraries.csv",stringsAsFactors=FALSE)
us_lib$unique_id <- paste0(us_lib$FSCSKEY,us_lib$FSCS_SEQ)
head(us_lib)
dim(dc_lib)
dim(us_lib)
dim(us_lib[which(us_lib$STABR=='DC'),])
dim(us_lib[which(us_lib$CITY=='CINCINNATI'),])
dim(us_lib[which(us_lib$STABR=='OH'),])
dim(us_lib[,1:5000])
dim(us_lib[1:5000,])
dim(us_lib[5001:10000,])
dim(us_lib[10001:15000,])
head(test)
head(us_lib)
